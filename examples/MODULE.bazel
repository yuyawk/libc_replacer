"""Test module for `libc_replacer`.
"""

module(
    name = "libc_replacer_examples",
    version = "0.0.0",
)

bazel_dep(name = "libc_replacer", version = "", dev_dependency = True)
local_path_override(
    module_name = "libc_replacer",
    path = "..",
)

# Register toolchain for C/C++

bazel_dep(
    name = "hermetic_cc_toolchain",
    version = "3.1.1",
    dev_dependency = True,
)

cc_toolchains = use_extension(
    "@hermetic_cc_toolchain//toolchain:ext.bzl",
    "toolchains",
    dev_dependency = True,
)
use_repo(cc_toolchains, "zig_sdk")

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.31",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.31",
    "@zig_sdk//toolchain:darwin_amd64",
    "@zig_sdk//toolchain:darwin_arm64",
    "@zig_sdk//toolchain:windows_amd64",
    "@zig_sdk//toolchain:windows_arm64",
    dev_dependency = True,
)

# Utility for testing C++ code
bazel_dep(name = "googletest", version = "1.15.2", dev_dependency = True)

# `clang_tools` for clang-tidy
bazel_dep(name = "clang_tools", version = "", dev_dependency = True)
local_path_override(
    module_name = "clang_tools",
    path = "../development/clang_tools",
)
